#!/bin/bash

set -o errexit

indent() {
  sed -u 's/^/       /'
}

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

NODE_TARGET="$BUILD_DIR/.heroku/vendor/node"
NODE_VERSION="v6.11.3"
NODE_URL="https://nodejs.org/dist/$NODE_VERSION/node-$NODE_VERSION-linux-x64.tar.gz"
NODE_TMPFILE="node-${NODE_VERSION}.tar.gz"

YARN_TARGET="$BUILD_DIR/.heroku/vendor/yarn"
YARN_VERSION="v1.1.0"
YARN_URL="https://github.com/yarnpkg/yarn/releases/download/$YARN_VERSION/yarn-$YARN_VERSION.tar.gz"
YARN_TMPFILE="yarn-${YARN_VERSION}.tar.gz"

downloadAndInstall() {
    local source_url=$1
    local target=$2
    local tmpfile="$CACHE_DIR/$3"

    echo "Clean up directories"|indent
    rm -rf $target
    mkdir -p "$target"

    if [ -e "$tmpfile" ]; then
        echo "Using archive from cache"|indent
    else
        echo "Download archive from $source_url"|indent
        curl "$source_url" -L --silent --fail --retry 5 --retry-max-time 15 -o "$tmpfile"
    fi

    echo "Extract archive"|indent
    tar xzf $tmpfile -C "$target" --strip 1
    rm $tmpfile

    echo "Mark binaries executable"|indent
    chmod +x $target/bin/*
}

echo "-----> Download and install nodejs…"
downloadAndInstall "$NODE_URL" "$NODE_TARGET" "$NODE_TMPFILE"
echo "Installed node.js $(node --version)"|indent

echo "-----> Download and install yarn…"
downloadAndInstall "$YARN_URL" "$YARN_TARGET" "$YARN_TMPFILE"
echo "Installed yarn $(yarn --version)"|indent

echo "-----> Copy over .profile.d scripts"
mkdir -p $BUILD_DIR/.profile.d
cp $BP_DIR/.profile.d/*.sh $build_dir/.profile.d/
